generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Event {
  id           Int      @id @default(autoincrement())
  event_name   String
  event_day    DateTime
  event_store  Int
  event_format Int      @default(0)
  event_category Int    @default(1)
  stores       Store    @relation(fields: [event_store], references: [id])
  formats      Format   @relation(fields: [event_format], references: [id])
  categories   EventCategory @relation(fields: [event_category], references: [id])
  member_list  MemberList[]
  created_at   DateTime @default(now()) @db.DateTime(0)
  updated_at   DateTime @default(now()) @db.DateTime(0) @updatedAt
  delete_flag  Int      @default(0)
}

model Member {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  auth_uid    String   @default("xxx")
  image_file_name String @default("/")
  event_list  MemberList[]
  sns_list    SnsInfo[]
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @default(now()) @db.DateTime(0) @updatedAt
  delete_flag Int      @default(0)
}

model MemberList {
  id          Int      @id @default(autoincrement())
  event_id    Int
  event       Event    @relation(fields: [event_id], references: [id])
  member_id   Int
  member      Member   @relation(fields: [member_id], references: [id])
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @default(now()) @db.DateTime(0) @updatedAt
  delete_flag Int      @default(0)
}

model SnsInfo {
  id          Int      @id @default(autoincrement())
  member_id   Int
  sns_link    String
  member      Member   @relation(fields: [member_id], references: [id])
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @default(now()) @db.DateTime(0) @updatedAt
  delete_flag Int      @default(0)
}

model Store {
  id          Int      @id @default(autoincrement())
  store_name  String
  prefecture_id  Int
  prefecture  Prefectures @relation(fields: [prefecture_id], references: [id])
  address     String
  link        String
  events      Event[]
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @default(now()) @db.DateTime(0) @updatedAt
}

model Format {
  id                  Int      @id @default(autoincrement())
  format_name         String
  english_format_name String
  events              Event[]
  created_at          DateTime @default(now()) @db.DateTime(0)
  updated_at          DateTime @default(now()) @db.DateTime(0) @updatedAt
  delete_flag         Int      @default(0)
}

model EventCategory {
  id                  Int      @id @default(autoincrement())
  category_name       String
  events              Event[]
  created_at          DateTime @default(now()) @db.DateTime(0)
  updated_at          DateTime @default(now()) @db.DateTime(0) @updatedAt
}

model Prefectures {
  id                  Int      @id @default(autoincrement())
  prefecture_name     String
  english_prefecture_name String
  stores              Store[]
  created_at          DateTime @default(now()) @db.DateTime(0)
  updated_at          DateTime @default(now()) @db.DateTime(0) @updatedAt
}
